/*
Cleaning Data in SQL 
*/


Select *
From NashvillePortfolio.dbo.Sheet1$

-- Standardize Date Format

Select saleDate, CONVERT(Date,SaleDate)
From NashvillePortfolio.dbo.Sheet1$


Update Sheet1$
SET SaleDate = CONVERT(Date,SaleDate)


-- Null Property Address data is filled with the Adress data from the same ParcelID wich have multiple UniqueID

Select *
From NashvillePortfolio.dbo.Sheet1$
Where PropertyAddress is null
order by ParcelID

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
From NashvillePortfolio.dbo.Sheet1$ a
JOIN  NashvillePortfolio.dbo.Sheet1$ b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
From NashvillePortfolio.dbo.Sheet1$ a
JOIN  NashvillePortfolio.dbo.Sheet1$ b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null


-- Breaking out Property Address into Individual Columns (Address, City)
-- Sill used: substring, Alter Table

Select PropertyAddress
From NashvillePortfolio.dbo.Sheet1$ 
Where PropertyAddress is null
order by ParcelID

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) as Address
From NashvillePortfolio.dbo.Sheet1$ 


ALTER TABLE Sheet1$
Add PropertySplitAddress Nvarchar(255);

Update Sheet1$
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )

ALTER TABLE Sheet1$
Add PropertySplitCity Nvarchar(255);

Update Sheet1$
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress))

Select *
From NashvillePortfolio.dbo.Sheet1$ 


-- Breaking out Property Address into Individual Columns (Address, City, state)
-- Skill used: substring, Alter Table, parsename

Select OwnerAddress
From NashvillePortfolio.dbo.Sheet1$ 

Select
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
From NashvillePortfolio.dbo.Sheet1$ 

ALTER TABLE Sheet1$
Add OwnerSplitAddress Nvarchar(255);

Update Sheet1$
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)

ALTER TABLE Sheet1$
Add OwnerSplitCity Nvarchar(255);

Update Sheet1$
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)

ALTER TABLE Sheet1$
Add OwnerSplitState Nvarchar(255);

Update Sheet1$
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)

Select *
From NashvillePortfolio.dbo.Sheet1$ 

-- Y and N to Yes and No in "Sold as Vacant" field
-- Skill used: Distinct, case

Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From NashvillePortfolio.dbo.Sheet1$ 
Group by SoldAsVacant
order by 2




Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From NashvillePortfolio.dbo.Sheet1$ 


Update Sheet1$
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END

-- Remove Duplicates when ParcelID PropertyAddress SalePrice SaleDate LegalReference are the same

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					   ) row_num
From NashvillePortfolio.dbo.Sheet1$
)
DELETE
From RowNumCTE
Where row_num > 1

Select *
From NashvillePortfolio.dbo.Sheet1$


-- Deleting Columns

Select *
From NashvillePortfolio.dbo.Sheet1$

ALTER TABLE NashvillePortfolio.dbo.Sheet1$
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate




